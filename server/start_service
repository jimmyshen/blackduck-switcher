#!/usr/bin/env python
#
# BlackDuck Task Service over Bluetooth
#

import os
import sys
import logging

# Setup GTK.
import gi
gi.require_versions({'Gtk': '3.0', 'Wnck': '3.0'})
from gi.repository import GObject, Gtk, Wnck

from blackduck.btservice import BluetoothService
from blackduck.screen import ScreenManager
from blackduck.frontend import BlackDuckLogDisplay


if __name__ == '__main__':

    try:
        # TODO Check if we still need this:
        GObject.threads_init()

        dialog = BlackDuckLogDisplay()

        # Log configuration.
        logging.basicConfig(level=logging.DEBUG, stream=sys.stdout)
        logging.info('Service starting with PID %d', os.getpid())
        logging.getLogger().addHandler(logging.StreamHandler(dialog))

        # Set up communication layer with GTK windows.
        screen = Wnck.Screen.get_default()
        screen_manager = ScreenManager(screen)
        screen_manager.initialize()

        # Start listening for Bluetooth service connections.
        btservice = BluetoothService(screen_manager)
        btservice.start()

        # Start GTK frontend and event loop.
        dialog.show_all()
        dialog.connect('delete-event', Gtk.main_quit)
        Gtk.main()
    finally:
        Wnck.shutdown()
        logging.info('Server shutdown.')

